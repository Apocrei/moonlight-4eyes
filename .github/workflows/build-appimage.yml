name: Build AppImage

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install FUSE (for AppImage)
        run: sudo apt-get update && sudo apt-get install -y libfuse2

      - name: Download appimagetool
        run: |
          curl -LO https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Prepare AppDir
        run: |
          mkdir -p AppDir/usr/share/icons/hicolor/512x512/apps

          # Copy and sanitize the desktop file:
          cp moonlight.desktop AppDir/
          # Remove any Icon= line, since we don't bundle a matching icon
          sed -i '/^Icon=/d' AppDir/moonlight.desktop

          # Copy your scripts into AppDir
          cp wrapper.sh install.sh AppDir/

          # Create the AppRun stub
          cat > AppDir/AppRun << 'EOF'
#!/usr/bin/env bash
DIR="$(dirname "$(readlink -f "$0")")"
bash "$DIR/install.sh"
EOF
          chmod +x AppDir/AppRun

      - name: Build AppImage
        run: |
          # explicitly set architecture
          ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          name: moonlight-wrapper.AppImage
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: moonlight-wrapper.AppImage
          path: moonlight-wrapper-x86_64.AppImage
